spring:
  application:
    name: iam-service
  main:
    banner-mode: 'off'
    allow-bean-definition-overriding: true
  datasource:
    url: ${DBMS_CONNECTION:jdbc:postgresql://localhost:5433/iam_db2}
    username: ${DBMS_USERNAME:postgres}
    password: ${DBMS_PASSWORD:14062003}
  driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
    ddl-auto: update
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  servlet:
    multipart:
      enabled: true
      max-file-size: 50MB
      max-request-size: 50MB
  security:
    oauth2:
      resourceserver:
        jwt:
          jwk-set-uris:
            internal: ${JWK_INTERNAL_URL:http://localhost:8888/api/certificate/.well-known/jwks.json}
            sso: ${JWK_SSO_URL:http://keycloak:8180/realms/IamService/protocol/openid-connect/certs}
  cloud:
    consul:
      host: ${CONSUL_HOST:localhost}
      port: 8500
      discovery:
        enabled: true
        service-name: iam-service
        health-check-path: /actuator/health
        health-check-interval: 10s
        prefer-ip-address: true
  kafka:
    producer:
      bootstrap-servers: ${KAFKA_HOST:localhost:9094}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer

server:
  port: 8888

redis:
  host: ${REDIS_HOST:localhost}
  port: 6379

jwt:
  key-store: keystore.jks
  key-store-password: ${JWT_KEY_STORE_PASSWORD:@123Hello}
  key-alias: viz
  valid-duration: 3600
  refreshable-duration: 36000

idp:
  url: ${KEYCLOAK_URL:http://localhost:8180}
  client-id: ${KEYCLOAK_CLIENT_ID:iam_service}
  client-secret: ${KEYCLOAK_CLIENT_SECRET:nYW29NN8ATLJ7UpQ9kfrAl35SlsTUWS8}

storage-service:
  url: ${STORAGE_SERVICE_URL:http://localhost:8080}

notification:
  url: ${NOTIFICATION_URL:http://localhost:3333}

auth:
  keycloak-enabled: true

app:
  iam:
    internal-url: http://localhost:8888

oauth:
  client:
    iam:
      client-id: ${IAM_CLIENT_ID:iam}
      client-secret: ${IAM_CLIENT_SECRET:FEn2lOqmNg}

management:
  endpoints:
    web:
      exposure:
        include: '*'

springdoc:
  swagger-ui:
    path: /swagger-doc/iam/swagger-ui.html
  api-docs:
    path: /swagger-doc/v3/api-docs/iam

outbound:
  identity:
    client-id: ${GOOGLE_CLIENT_ID:204369626319-m0u86c2pqut8ne5amh5n9uejcpfiqmrp.apps.googleusercontent.com}
    client-secret: ${GOOGLE_CLIENT_SECRET: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}
    redirect-uri: "http://localhost:3000/authenticate"
